)
p
install.packages(plotly)
library(plotly)
HeatMap <- read.csv(file.choose(), header=T) # input is 'StateFreq.csv'
p <- plot_geo(HeatMap, locationmode = 'USA-states') %>%
add_trace(
z = ~HeatMap$Freq, locations = ~HeatMap$Var1,
color = ~HeatMap$Freq, colors = 'Reds' ) %>%
colorbar(title = "Tweet Frequency") %>%
layout(
title = '2017-18 Frequency of Tweets on Flu Categorized by states',
geo = list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
)
p
q()
library(plotly)
HeatMap <- read.csv(file.choose(), header=T) # input is 'StateFreq.csv'
p <- plot_geo(HeatMap, locationmode = 'USA-states') %>%
add_trace(
z = ~HeatMap$Freq, locations = ~HeatMap$Var1,
color = ~HeatMap$Freq, colors = 'Reds' ) %>%
colorbar(title = "Tweet Frequency") %>%
layout(
title = '2017-18 Frequency of Tweets on Flu Categorized by states',
geo = list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
)
p
library("ggmap")
library("maptools")
library(maps)
register_google(key =  "AIzaSyCRKNLS1QGT74Fq1IrYuUpVkH3FQw3_reg")
visited <- c("SFO", "Chennai", "London", "Melbourne", "Johannesbury, SA")
ll.visited <- geocode(visited)
visit.x <- ll.visited$lon
visit.y <- ll.visited$lat
map("world", fill=TRUE, col="white", bg="lightblue", ylim=c(-60, 90), mar=c(0,0,0,0))
points(visit.x,visit.y, col="red", pch=36)
library(plotly)
library("ggmap")
library("maptools")
library(maps)
HeatMap <- read.csv(file.choose(), header=T) # input file : 'FluHeatMap_USA.csv'
p <- plot_geo(HeatMap, locationmode = 'USA-states') %>%
add_trace(
z = ~HeatMap$LEVEL, locations = ~HeatMap$STATE,
color = ~HeatMap$LEVEL, colors = 'Reds' ) %>%
colorbar(title = "Activity_Level") %>%
layout(
title = '2017-18 Influenza Season Week 4 ending Jan 27, 2018',
geo = list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
)
p
library(plotly)
HeatMap <- read.csv(file.choose(), header=T) # input is 'StateFreq.csv'
p <- plot_geo(HeatMap, locationmode = 'USA-states') %>%
add_trace(
z = ~HeatMap$Freq, locations = ~HeatMap$Var1,
color = ~HeatMap$Freq, colors = 'Reds' ) %>%
colorbar(title = "Tweet Frequency") %>%
layout(
title = '2017-18 Frequency of Tweets on Flu Categorized by states',
geo = list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
)
library(plotly)
HeatMap <- read.csv(file.choose(), header=T) # input is 'StateFreq.csv'
p <- plot_geo(HeatMap, locationmode = 'USA-states') %>%
add_trace(
z = ~HeatMap$Freq, locations = ~HeatMap$Var1,
color = ~HeatMap$Freq, colors = 'Reds' ) %>%
colorbar(title = "Tweet Frequency") %>%
layout(
title = '2017-18 Frequency of Tweets on Flu Categorized by states',
geo = list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
)
p
tweetStates <- read.csv(file.choose(),header = T)
groupStates <- data.frame(table(tweetStates$str_sub.addr.3...2..3.))
write.csv(groupStates, "combinedFreq.csv")
library(plotly)
HeatMap <- read.csv(file.choose(), header=T) # input is 'StateFreq.csv'
p <- plot_geo(HeatMap, locationmode = 'USA-states') %>%
add_trace(
z = ~HeatMap$Freq, locations = ~HeatMap$Var1,
color = ~HeatMap$Freq, colors = 'Greens' ) %>%
colorbar(title = "Tweet Frequency") %>%
layout(
title = '2018-19 Frequency of Tweets on Influenza Categorized by states',
geo = list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('red')
)
)
p
library(plotly)
HeatMap <- read.csv(file.choose(), header=T) # input is 'StateFreq.csv'
p <- plot_geo(HeatMap, locationmode = 'USA-states') %>%
add_trace(
z = ~HeatMap$Freq, locations = ~HeatMap$Var1,
color = ~HeatMap$Freq, colors = 'Oranges' ) %>%
colorbar(title = "Tweet Frequency") %>%
layout(
title = '2018-19 Frequency of Tweets on Influenza and Flu Categorized by states',
geo = list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
)
p
library(plotly)
HeatMap <- read.csv(file.choose(), header=T) # input is 'StateFreq.csv'
p <- plot_geo(HeatMap, locationmode = 'USA-states') %>%
add_trace(
z = ~HeatMap$Freq, locations = ~HeatMap$Var1,
color = ~HeatMap$Freq, colors = 'Yellows' ) %>%
colorbar(title = "Tweet Frequency") %>%
layout(
title = '2018-19 Frequency of Tweets on Influenza and Flu Categorized by states',
geo = list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
)
p
library(plotly)
HeatMap <- read.csv(file.choose(), header=T) # input is 'StateFreq.csv'
p <- plot_geo(HeatMap, locationmode = 'USA-states') %>%
add_trace(
z = ~HeatMap$Freq, locations = ~HeatMap$Var1,
color = ~HeatMap$Freq, colors = 'Reds' ) %>%
colorbar(title = "Tweet Frequency") %>%
layout(
title = '2018-19 Frequency of Tweets on Influenza and Flu Categorized by states',
geo = list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
)
p
library(shiny); runApp('E:/UB DIC/part2/codes/shinyapp/Rshinyapp.R')
library(shiny); runApp('E:/UB DIC/part2/codes/shinyapp/Rshinyapp.R')
runApp('E:/UB DIC/part2/codes/shinyapp/Rshinyapp.R')
runApp('E:/UB DIC/part2/codes/shinyapp/Rshinyapp.R')
library(plotly)
HeatMap <- read.csv(file.choose(), header=T) # input is 'StateFreq.csv'
p <- plot_geo(HeatMap, locationmode = 'USA-states') %>%
add_trace(
z = ~HeatMap$Freq, locations = ~HeatMap$Var1,
color = ~HeatMap$Freq, colors = 'Reds' ) %>%
colorbar(title = "Tweet Frequency") %>%
layout(
title = '2018-19 Frequency of Tweets on Influenza and Flu Categorized by states',
geo = list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
)
p
# 5000 tweets on Flu
library(rtweet)
twitter_token <- create_token(app = "Twitter_project12",
consumer_key = "YIOCdZHjofrpDWAobTBFJF9HL",
consumer_secret = "qsuVR4MF7cdAlifOogjoEsAU5oU7Ir3EZFpYrGgDNizEy7iink",
access_token = "1098723824630153216-kscvMcTHSErtxlg0Gpb5X7NG1zJzVJ",
access_secret = "QMxx2XSL6d3wJrf2stqFCxGrnzvSjuNVqnrgH7ZDAuoin")
tweets <- search_tweets(q = "flu", n = 5000, token = twitter_token, geocode = lookup_coords("usa"))
tweets
save_as_csv(tweets,"flu.csv")
users_data(tweets)
library(ggmap)
tweetcsv<-read.csv(file.choose(), header=T) # input is 'flu.user.csv'
latlon <- geocode(as.character(tweetcsv$location), override_limit = TRUE, source = "google")
latlon
write.csv(latlon, "flu_latlon.csv")
library(ggmap)
library(stringr)
d <- read.csv(file.choose(), header=T) # input is 'flu_latlon.csv'
x <- subset(d,lon != 'NA')
result <- data.frame()
for(i in 1:nrow(x)){
row <- x[i,]
latlon <- c(row$lon,row$lat)
latlon <- revgeocode(as.numeric(latlon))
if(!is.na(latlon)){
addr<-c(as.character(unlist(strsplit(latlon,","))))
result<-rbind(result,data.frame(str_sub(addr[3],2,3)))
}
}
result
write.csv(result, "flu_StateCode.csv")
tweetStates <- read.csv(file.choose(),header = T)
groupStates <- data.frame(table(tweetStates$str_sub.addr.3...2..3.))
write.csv(groupStates, "combinedFreq.csv")
install.packages("utf8")
# Generate heatmap to represent number tweets from each state in USA.
library(plotly)
HeatMap <- read.csv(file.choose(), header=T) # input is 'StateFreq.csv'
p <- plot_geo(HeatMap, locationmode = 'USA-states') %>%
add_trace(
z = ~HeatMap$Freq, locations = ~HeatMap$Var1,
color = ~HeatMap$Freq, colors = 'Reds' ) %>%
colorbar(title = "Tweet Frequency") %>%
layout(
title = '2019 Frequency of Tweets on Influenza and Flu Categorized by states',
geo = list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
)
p
runApp('Rshinyapp.R')
library(plotly)
TableData<-read.csv(file.choose(), header=T) # input file : 'Mortality.csv'
TableData$NewCol <- paste(TableData$Year, TableData$Week, sep='')
d<-data.frame(TableData$Week,TableData$Threshold,TableData$Expected,TableData$Percent.of.Deaths.Due.to.Pneumonia.and.Influenza)
final<-plot_ly(d, x = ~TableData$NewCol) %>%
add_trace(y = ~c(TableData$Threshold),type = 'scatter', mode = 'lines', name = 'Threshold',
line = list(color='black',width =4)) %>%
add_trace(y = ~c(TableData$Expected), type = 'scatter', mode = 'lines', name = 'Base Line',
line = list(color='black')) %>%
add_trace(y = ~c(TableData$Percent.of.Deaths.Due.to.Pneumonia.and.Influenza), type = 'scatter',
mode = 'lines', name = 'Percent P&I',line = list(color='red')) %>%
layout(xaxis = list(title = "Week", type = "category",categoryarray=c(0,432)),
#xaxis2 = list(range = c(0,432), overlaying = 'x',side = 'top', type = "category"),
yaxis = list(range = c(4,12),title = '% of All Deaths due to P&I'),
title='Pneumonia and Influenza Mortality Data \nthe week ending January 2009, as of Feburary 16, 2019')
final
library(plotly)
TableData1<-read.csv(file.choose(), header=T) # input file : 'ILI-16-17.csv'
TableData2<-read.csv(file.choose(), header=T) # input file : 'ILI-15-16.csv'
TableData3<-read.csv(file.choose(), header=T) # input file : 'ILI-14-15.csv'
TableData4<-read.csv(file.choose(), header=T) # input file : 'ILI-11-12.csv'
TableData5<-read.csv(file.choose(), header=T) # input file : 'ILI-9-10.csv'
TableData6<-read.csv(file.choose(), header=T) # input file : 'ILI-17-18.csv'
TableData1$NewCol <- paste(TableData1$YEAR, TableData1$WEEK, sep='')
d<-data.frame(TableData1$X..WEIGHTED.ILI)
s <- TableData1$WEEK
final<-plot_ly(d) %>%
add_trace(y = ~c(TableData1$X..WEIGHTED.ILI), type = 'scatter', mode = 'lines', name = '2017-18 Season',
line = list(color='grey')) %>%
add_trace(y = ~c(TableData2$X..WEIGHTED.ILI), type = 'scatter', mode = 'lines', name = '2016-17 Season',
line = list(color='green')) %>%
add_trace(y = ~c(TableData3$X..WEIGHTED.ILI), type = 'scatter', mode = 'lines', name = '2015-16 Season',
line = list(color='pink')) %>%
add_trace(y = ~c(TableData4$X..WEIGHTED.ILI), type = 'scatter', mode = 'lines', name = '2014-15 Season',
line = list(color='orange')) %>%
add_trace(y = ~c(TableData5$X..WEIGHTED.ILI), type = 'scatter', mode = 'lines', name = '2013-14 Season',
line = list(color='blue')) %>%
add_trace(y = ~c(TableData6$X..WEIGHTED.ILI), type = 'scatter', mode = 'lines+markers', name = '2018-2019',
line = list(color='red')) %>%
add_trace(y = ~c(rep(2.2,times = 60)), type = 'scatter', mode = 'lines', name = 'National Baseline',
line = list(color='black', dash = 'dash')) %>%
layout(xaxis = list(range = c(0,60),title = "Week", type = "category"),yaxis = list(title = '% of Visits for ILI'),
title='Percentage of visits for Influenza-like Illines(ILI) \nWeekly National Summary, 2018-2019 and Selected Previous Seasons')
final
library(plotly)
HeatMap <- read.csv(file.choose(), header=T) # input is 'StateFreq.csv'
p <- plot_geo(HeatMap, locationmode = 'USA-states') %>%
add_trace(
z = ~HeatMap$Freq, locations = ~HeatMap$Var1,
color = ~HeatMap$Freq, colors = 'Reds' ) %>%
colorbar(title = "Tweet Frequency") %>%
layout(
title = '2019 Frequency of Tweets on Influenza and Flu Categorized by states',
geo = list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
)
p
# 5000 tweets on Flu
library(rtweet)
twitter_token <- create_token(app = "Twitter_project12",
consumer_key = "YIOCdZHjofrpDWAobTBFJF9HL",
consumer_secret = "qsuVR4MF7cdAlifOogjoEsAU5oU7Ir3EZFpYrGgDNizEy7iink",
access_token = "1098723824630153216-kscvMcTHSErtxlg0Gpb5X7NG1zJzVJ",
access_secret = "QMxx2XSL6d3wJrf2stqFCxGrnzvSjuNVqnrgH7ZDAuoin")
tweets <- search_tweets(q = "flu OR usflu OR usinfluenza OR influenza OR H3N2 OR H1N1 OR flutests OR positiveflutest OR fluhospitalizations OR flumortality OR UnitedStatesflu OR fluepidemic OR statesflu OR flushot ", n = 5000, token = twitter_token, geocode = lookup_coords("usa"))
tweets
save_as_csv(tweets,"Allflu.csv")
users_data(tweets)
library(ggmap)
tweetcsv<-read.csv(file.choose(), header=T) # input is 'flu.user.csv'
latlon <- geocode(as.character(tweetcsv$location), override_limit = TRUE, source = "google")
latlon
write.csv(latlon, "flu_latlon.csv")
library(ggmap)
library(stringr)
d <- read.csv(file.choose(), header=T) # input is 'flu_latlon.csv'
x <- subset(d,lon != 'NA')
result <- data.frame()
for(i in 1:nrow(x)){
row <- x[i,]
latlon <- c(row$lon,row$lat)
latlon <- revgeocode(as.numeric(latlon))
if(!is.na(latlon)){
addr<-c(as.character(unlist(strsplit(latlon,","))))
result<-rbind(result,data.frame(str_sub(addr[3],2,3)))
}
}
result
write.csv(result, "flu_StateCode.csv")
tweetStates <- read.csv(file.choose(),header = T)
groupStates <- data.frame(table(tweetStates$str_sub.addr.3...2..3.))
write.csv(groupStates, "combinedFreq.csv")
install.packages("utf8")
# Generate heatmap to represent number tweets from each state in USA.
library(plotly)
HeatMap <- read.csv(file.choose(), header=T) # input is 'StateFreq.csv'
p <- plot_geo(HeatMap, locationmode = 'USA-states') %>%
add_trace(
z = ~HeatMap$Freq, locations = ~HeatMap$Var1,
color = ~HeatMap$Freq, colors = 'Reds' ) %>%
colorbar(title = "Tweet Frequency") %>%
layout(
title = '2019 Frequency of Tweets on Influenza and Flu Categorized by states',
geo = list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
)
p
install.packages("utf8")
library(plotly)
HeatMap <- read.csv(file.choose(), header=T) # input is 'StateFreq.csv'
p <- plot_geo(HeatMap, locationmode = 'USA-states') %>%
add_trace(
z = ~HeatMap$Freq, locations = ~HeatMap$Var1,
color = ~HeatMap$Freq, colors = 'Reds' ) %>%
colorbar(title = "Tweet Frequency") %>%
layout(
title = '2019 Frequency of Tweets on Flu Categorized by states',
geo = list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
)
p
# 5000 tweets on Flu
library(rtweet)
twitter_token <- create_token(app = "Twitter_project12",
consumer_key = "YIOCdZHjofrpDWAobTBFJF9HL",
consumer_secret = "qsuVR4MF7cdAlifOogjoEsAU5oU7Ir3EZFpYrGgDNizEy7iink",
access_token = "1098723824630153216-kscvMcTHSErtxlg0Gpb5X7NG1zJzVJ",
access_secret = "QMxx2XSL6d3wJrf2stqFCxGrnzvSjuNVqnrgH7ZDAuoin")
tweets <- search_tweets(q = "flu OR usflu OR usinfluenza OR influenza OR H3N2 OR H1N1 OR flutests OR positiveflutest OR fluhospitalizations OR flumortality OR UnitedStatesflu OR fluepidemic OR statesflu OR flushot ", n = 5000, token = twitter_token, geocode = lookup_coords("usa"))
library(ggplot2)
library(maps)
library(mapproj)
library(usmap)
us <- map_data("state")
heat_map_data <- read.csv(file.choose(),header=T)
heat_map_data$statelower <- tolower(heat_map_data$STATENAME)
summary(heat_map_data$ACTIVITY.LEVEL)
heat_map_data$fact_acivity_level <- factor(heat_map_data$ACTIVITY.LEVEL, levels = c("Level 10","Level 9","Level 8","Level 7","Level 6","Level 5","Level 4","Level 3","Level 2","Level 1"))
ggplot(heat_map_data,aes(map_id = heat_map_data$statelower,fill = heat_map_data$fact_acivity_level))+
geom_map(map=us,color = "Blues")+
expand_limits(x=us$long,y=us$lat)+
scale_fill_manual(values = c("#cc0000","#fa4f00","#fc8200","#fcb100","#f7df00","#e0f500","#baf700","#8cf700","#00ff00","#00c200","white"),drop=FALSE)+
coord_map("bonne",lat0=20)+
labs(fill="ILI Activity Level",title = "2018-2019 Influenza Season week 4 ending Feb 28 ,2019",x="",y="")+
theme(panel.grid = element_blank(),axis.title.x = element_blank(),
axis.title.y = element_blank(),axis.text.x = element_blank(),
axis.text.y = element_blank(),axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),line = element_blank(),plot.title = element_text(hjust = 0.5,face='bold',size = 10),
legend.title = element_text(face='bold',size = 8))
library(plotly)
HeatMap <- read.csv(file.choose(), header=T)
finalplot <- plot_geo(heatMap, locationmode = 'USA-states') %>%
add_trace(
z = ~heatMap$LEVEL, locations = ~heatMap$STATE,
color = ~heatMap$LEVEL, colors = 'Blues' ) %>%
colorbar(title = "Activity_Level") %>%
layout(
title = '2018-19 Influenza Season Week 8 ending Feb 23, 2019',
geo = list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
)
finalplot
library(plotly)
HeatMap <- read.csv(file.choose(), header=T)
finalplot <- plot_geo(heatMap, locationmode = 'USA-states') %>%
add_trace(
z = ~heatMap$LEVEL, locations = ~heatMap$STATE,
color = ~heatMap$LEVEL, colors = 'Blues' ) %>%
colorbar(title = "Activity_Level") %>%
layout(
title = '2018-19 Influenza Season Week 8 ending Feb 23, 2019',
geo = list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
)
finalplot
library(plotly)
HeatMap <- read.csv(file.choose(), header=T)
finalplot <- plot_geo(heatMap, locationmode = 'USA-states') %>%
add_trace(
z = ~heatMap$LEVEL, locations = ~heatMap$STATE,
color = ~heatMap$LEVEL, colors = 'Blues' ) %>%
colorbar(title = "Activity_Level") %>%
layout(
title = '2018-19 Influenza Season Week 8 ending Feb 23, 2019',
geo = list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
)
finalplot
library(plotly)
heatMap <- read.csv(file.choose(), header=T)
finalplot <- plot_geo(heatMap, locationmode = 'USA-states') %>%
add_trace(
z = ~heatMap$LEVEL, locations = ~heatMap$STATE,
color = ~heatMap$LEVEL, colors = 'Blues' ) %>%
colorbar(title = "Activity_Level") %>%
layout(
title = '2018-19 Influenza Season Week 8 ending Feb 23, 2019',
geo = list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
)
finalplot
library(plotly)
heatMap <- read.csv(file.choose(), header=T)
finalplot <- plot_geo(heatMap, locationmode = 'USA-states') %>%
add_trace(
z = ~heatMap$LEVEL, locations = ~heatMap$STATE,
color = ~heatMap$LEVEL, colors = 'Greens' ) %>%
colorbar(title = "Activity_Level") %>%
layout(
title = '2018-19 Influenza Season Week 8 ending Feb 23, 2019',
geo = list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
)
finalplot
library(plotly)
heatMap <- read.csv(file.choose(), header=T)
finalplot <- plot_geo(heatMap, locationmode = 'USA-states') %>%
add_trace(
z = ~heatMap$LEVEL, locations = ~heatMap$STATE,
color = ~heatMap$LEVEL, colors = 'Reds' ) %>%
colorbar(title = "Activity_Level") %>%
layout(
title = '2018-19 Influenza Season Week 8 ending Feb 23, 2019',
geo = list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
)
finalplot
library(shiny); runApp('E:/UB DIC/part2/codes/shinyapp/Rshinyapp.R')
